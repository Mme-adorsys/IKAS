version: '3.8'

services:
  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: ikas-keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
    command: start-dev
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/realms/master || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL Database for Keycloak
  postgres:
    image: postgres:15-alpine
    container_name: ikas-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15
    container_name: ikas-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p password 'RETURN 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Caching and Pub/Sub
  redis:
    image: redis:7.2-alpine
    container_name: ikas-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Keycloak MCP Server (stdio mode for development)
  keycloak-mcp:
    build:
      context: ../keycloak-mcp-server
      dockerfile: Dockerfile
    container_name: ikas-keycloak-mcp
    ports:
      - "8001:8001"
    environment:
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      PORT: 8001
      NODE_ENV: development
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Neo4j MCP Server (TypeScript/Node.js)
  neo4j-mcp:
    build:
      context: ../mcp-neo4j
      dockerfile: Dockerfile
    container_name: ikas-neo4j-mcp
    ports:
      - "8002:8002"
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: password
      NEO4J_DATABASE: neo4j
      PORT: 8002
      NODE_ENV: development
    depends_on:
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Gateway (TypeScript/Node.js with Express.js)
  ai-gateway:
    build:
      context: ../ai-gateway
      dockerfile: Dockerfile
    container_name: ikas-ai-gateway
    ports:
      - "8000:8000"
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      REDIS_URL: redis://redis:6379
      KEYCLOAK_MCP_URL: http://keycloak-mcp:8001
      NEO4J_MCP_URL: http://neo4j-mcp:8002
      NODE_ENV: development
      PORT: 8000
    depends_on:
      keycloak-mcp:
        condition: service_healthy
      neo4j-mcp:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_plugins:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: ikas-network